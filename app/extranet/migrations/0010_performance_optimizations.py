# Generated by Django optimization for user leave balances and monthly reports

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('extranet', '0009_userprofile_carry_over'),
    ]

    operations = [
        # Ajout d'index pour optimiser les requêtes fréquentes
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_leave_user_status_dates ON extranet_leaverequest(user_id, status, start_date, end_date);",
            reverse_sql="DROP INDEX IF EXISTS idx_leave_user_status_dates;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_telework_user_status_dates ON extranet_teleworkrequest(user_id, status, start_date, end_date);",
            reverse_sql="DROP INDEX IF EXISTS idx_telework_user_status_dates;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_leave_start_date_year_month ON extranet_leaverequest(EXTRACT(year FROM start_date), EXTRACT(month FROM start_date));",
            reverse_sql="DROP INDEX IF EXISTS idx_leave_start_date_year_month;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_telework_start_date_year_month ON extranet_teleworkrequest(EXTRACT(year FROM start_date), EXTRACT(month FROM start_date));",
            reverse_sql="DROP INDEX IF EXISTS idx_telework_start_date_year_month;"
        ),
        
        # Table de cache pour les soldes de congés
        migrations.CreateModel(
            name='UserLeaveBalanceCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
                ('year', models.IntegerField()),
                ('acquired_days', models.DecimalField(decimal_places=1, max_digits=4, default=0)),
                ('taken_days', models.DecimalField(decimal_places=1, max_digits=4, default=0)),
                ('carry_over_days', models.DecimalField(decimal_places=1, max_digits=4, default=0)),
                ('remaining_days', models.DecimalField(decimal_places=1, max_digits=4, default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': (('user', 'year'),),
                'indexes': [
                    models.Index(fields=['user', 'year'], name='idx_balance_user_year'),
                    models.Index(fields=['last_updated'], name='idx_balance_updated'),
                ],
            },
        ),
        
        # Table de cache pour les rapports mensuels
        migrations.CreateModel(
            name='UserMonthlyReportCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('days_at_office', models.IntegerField(default=0)),
                ('days_telework', models.IntegerField(default=0)),
                ('days_leave', models.DecimalField(decimal_places=1, max_digits=4, default=0)),
                ('total_workdays', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': (('user', 'year', 'month'),),
                'indexes': [
                    models.Index(fields=['user', 'year', 'month'], name='idx_monthly_user_period'),
                    models.Index(fields=['last_updated'], name='idx_monthly_updated'),
                ],
            },
        ),
    ]
