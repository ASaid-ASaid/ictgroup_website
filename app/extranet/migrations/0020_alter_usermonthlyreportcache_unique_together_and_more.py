# Generated by Django 5.2.5 on 2025-08-26 22:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('extranet', '0019_performance_indexes'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='usermonthlyreportcache',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='usermonthlyreportcache',
            name='user',
        ),
        migrations.AddField(
            model_name='teleworkrequest',
            name='rh_validated',
            field=models.BooleanField(default=False, help_text='Validation RH'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titre du document', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description du document', null=True)),
                ('category', models.CharField(choices=[('payslip', 'Fiche de paie'), ('certificate', 'Attestation de travail'), ('note', 'Note générale'), ('policy', "Politique d'entreprise"), ('form', 'Formulaire'), ('link', 'Lien externe'), ('other', 'Autre')], default='other', help_text='Catégorie du document', max_length=20)),
                ('document_type', models.CharField(choices=[('file', 'Fichier'), ('link', 'Lien')], default='file', help_text='Type de document : fichier ou lien', max_length=10)),
                ('file', models.FileField(blank=True, help_text='Fichier du document (requis si type=fichier)', null=True, upload_to='documents/%Y/%m/')),
                ('link_url', models.URLField(blank=True, help_text='URL du lien (requis si type=lien)', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_type', models.CharField(choices=[('all', 'Tout le monde'), ('specific', 'Personnes spécifiques'), ('role', 'Par rôle')], default='all', help_text='Type de ciblage', max_length=10)),
                ('target_roles', models.CharField(blank=True, help_text='Rôles ayant accès (séparés par des virgules)', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Document actif')),
                ('download_count', models.PositiveIntegerField(default=0, help_text='Nombre de téléchargements/clics')),
                ('target_users', models.ManyToManyField(blank=True, help_text='Utilisateurs spécifiques ayant accès', related_name='accessible_documents', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(help_text='Utilisateur qui a uploadé le document', on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='extranet.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Téléchargement de document',
                'verbose_name_plural': 'Téléchargements de documents',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyUserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Année')),
                ('month', models.IntegerField(help_text='Mois (1-12)')),
                ('days_at_office', models.IntegerField(default=0, help_text='Nombre de jours travaillés au bureau')),
                ('days_telework', models.IntegerField(default=0, help_text='Nombre de jours en télétravail')),
                ('days_leave', models.DecimalField(decimal_places=1, default=0, help_text='Nombre de jours de congés pris', max_digits=4)),
                ('overtime_hours', models.DecimalField(decimal_places=1, default=0, help_text='Heures supplémentaires travaillées (weekend, télétravail)', max_digits=5)),
                ('total_workdays', models.IntegerField(default=0, help_text='Total des jours ouvrés dans le mois')),
                ('holidays_count', models.IntegerField(default=0, help_text='Nombre de jours fériés dans le mois')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='Utilisateur concerné', on_delete=django.db.models.deletion.CASCADE, related_name='monthly_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Statistiques mensuelles utilisateur',
                'verbose_name_plural': 'Statistiques mensuelles utilisateurs',
                'ordering': ['-year', '-month', 'user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='OverTimeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_date', models.DateField(help_text='Date de travail (samedi ou dimanche)')),
                ('hours', models.DecimalField(decimal_places=1, help_text="Nombre d'heures travaillées", max_digits=4)),
                ('description', models.TextField(blank=True, help_text='Description du travail effectué', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvée'), ('rejected', 'Rejetée'), ('cancelled', 'Annulée')], default='pending', help_text='Statut de la demande', max_length=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager_validated', models.BooleanField(default=False, help_text='Validation du manager')),
                ('rh_validated', models.BooleanField(default=False, help_text='Validation RH')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-work_date'],
            },
        ),
        migrations.CreateModel(
            name='UserLeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField(help_text='Date de début de la période de référence (01/06)')),
                ('period_end', models.DateField(help_text='Date de fin de la période de référence (31/05)')),
                ('days_acquired', models.DecimalField(decimal_places=1, default=0, help_text='Jours de congés acquis dans la période', max_digits=5)),
                ('days_taken', models.DecimalField(decimal_places=1, default=0, help_text='Jours de congés pris dans la période', max_digits=5)),
                ('days_carry_over', models.DecimalField(decimal_places=1, default=0, help_text='Report de la période précédente', max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='Utilisateur associé à ce solde', on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solde de congés utilisateur',
                'verbose_name_plural': 'Soldes de congés utilisateurs',
                'ordering': ['-period_start', 'user__last_name', 'user__first_name'],
            },
        ),
        migrations.DeleteModel(
            name='UserLeaveBalanceCache',
        ),
        migrations.DeleteModel(
            name='UserMonthlyReportCache',
        ),
        migrations.AddIndex(
            model_name='monthlyuserstats',
            index=models.Index(fields=['user', 'year', 'month'], name='idx_stats_user_period'),
        ),
        migrations.AddIndex(
            model_name='monthlyuserstats',
            index=models.Index(fields=['year', 'month'], name='idx_stats_period'),
        ),
        migrations.AddIndex(
            model_name='monthlyuserstats',
            index=models.Index(fields=['last_updated'], name='idx_stats_updated'),
        ),
        migrations.AlterUniqueTogether(
            name='monthlyuserstats',
            unique_together={('user', 'year', 'month')},
        ),
        migrations.AlterUniqueTogether(
            name='overtimerequest',
            unique_together={('user', 'work_date')},
        ),
        migrations.AlterUniqueTogether(
            name='userleavebalance',
            unique_together={('user', 'period_start')},
        ),
    ]
